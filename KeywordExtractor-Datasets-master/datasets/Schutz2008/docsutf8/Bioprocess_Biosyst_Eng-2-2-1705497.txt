Bioprocess Biosyst Eng
Bioprocess and Biosystems Engineering
1615-7591
1615-7605
Springer-Verlag
Berlin/Heidelberg


1705497
17048033
87
10.1007/s00449-006-0087-7
Original Paper


Genetic algorithm for multi-objective experimental optimization

Link
Hannes



Weuster-Botz
Dirk

+49-89-28915712
+49-89-28915714

D.Weuster-Botz@lrz.tu-muenchen.de



Lehrstuhl für Bioverfahrenstechnik, Technische Universität München, Boltzmannstr. 15,  Garching, 85748 Germany 

18
10
2006

12
2006

29
5-6
385
390
11
9
2006

20
9
2006


© Springer-Verlag 2006

A new software tool making use of a genetic algorithm for multi-objective experimental optimization (GAME.opt) was developed based on a strength Pareto evolutionary algorithm. The software deals with high dimensional variable spaces and unknown interactions of design variables. This approach was evaluated by means of multi-objective test problems replacing the experimental results. A default parameter setting is proposed enabling users without expert knowledge to minimize the experimental effort (small population sizes and few generations).

Keywords
Experimental design
Genetic algorithm
Multi-objective optimization
Software tool

issue-copyright-statement
© Springer-Verlag 2006




Introduction
In many technical problems scientists face the problem of identifying optimal process conditions like pH, temperature, concentrations or other variables. A typical example is fermentation medium development. The composition of a fermentation medium consisting of carbon sources, nitrogen sources, mineral salts, trace elements, amino acids and/or peptides, vitamins and other growth factors determines the chemical and nutritional environment of cells in a bioreactor and is thus vital for the effective manufacturing of bioproducts.
1
1
\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{mathrsfs}
\usepackage{upgreek}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$ \begin{aligned}{} {\text{min/max }}{\mathbf{y}} = & \phi ({\mathbf{x}}) = (\phi _{1} ({\mathbf{x}}),\phi _{2} ({\mathbf{x}}), \ldots, \phi _{n} ({\mathbf{x}})) \\ {\text{subject to }}{\mathbf{x}}{\text{ = }} & {\text{(}}x_{1} ,x_{2} , \ldots, x_{m} ) \in X \\ {\mathbf{y}}{\text{ = }} & (y_{1} ,y_{2} , \ldots, y_{n} ) \in Y \\ \end{aligned} $$\end{document}


m
φ
y
n
 experimental observations.
1
Fig. 1
black
white
y
1
y
2





1
].
2
3
] first published their work on this subject. GAs are based on evolutionary principles, encoding several sets of design variables on binary strings (individuals in a population) which are processed by GA operators (crossover and mutation) throughout several generations. The principle “survival of the fittest” assures a convergence towards optimal values in the design variables with proceeding generations.
4
1
5
6
]. The SPEAs main feature is processing two populations: besides a normal population an external population serves as a kind of archive, keeping track of the efficient set. Especially in the case of experimental design with a limited number of experiments the SPEA is supposed to have advantages compared to VEGA with respect to the experimental effort.
The new software tool with a genetic algorithm for multi-objective experimental optimization making use of SPEA will be outlined. The performance of GAME.opt will be evaluated with the help of special test-functions to achieve appropriate parameter settings for experimental design.

Methods
GAME.opt was developed with LabVIEW 7 (National Instruments). The Application Builder was used to create a stand alone application running under Windows platforms. Data handling is based on spreadsheet files, which can be accessed via a text editor or Microsoft Excel. GAME.opt will be made available on request by the Technical University of Munich.
6
7
N
extern
N
cluster
 by means of average clustering.
The first step when using GAME.opt is to create a new project where all information on the experimental design is defined. For this purpose the user is led through the steps explained together with some recommendations in the following.
Design variables
x
1
n
a
1
...a
n

x 
x
L
 x
U
2
\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{mathrsfs}
\usepackage{upgreek}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$ x = {\left( {\frac{{x^{{\text{U}}} - x^{{\text{L}}} }} {{2^{n} - 1}}} \right)}{\sum\limits_{i = 0}^{n - 1} {a_{{(n - i)}} 2^{i} + x^{{\text{L}}} } } $$\end{document}

a
1
a
n

8
n 

− 1). In other words, like its natural paradigm, the binary code is degenerated if there are more bit combinations than levels (the opposite case will not occur as the program computes the minimal amount of required bits).
If the experimental setup prevents an adequate choice of levels the coding can be made visible in GAME.opt. In order to assure equal processing of all variables the amount of levels among the variables should not vary too much.

M
l
X
1
p
3
p
M
9
3
\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{mathrsfs}
\usepackage{upgreek}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$ p = {\left( {1 - 0.5^{{M - 1}} } \right)}^{l} $$\end{document}

p
 should be higher than 0.99.

As each individual corresponds to one experiment, the experimental effort will be correlated to the chosen amount of levels.

The increment should be higher than the possible precision in the experiment.




Experimental results
y
All parameters different from the design variables have to remain fixed in all experiments throughout the optimization procedure.

The experimental error should be lower than the differences that are expected to result from different levels in the design variables.




Objective functions
The objective functions in GAME.opt can be any linear combination of the experimental results and the decision variables. GAME.opt will maximize all objective values. If for example one objective is minimizing a certain experimental result, the objective function is –1 times the according result. When defining the objective functions it is important to make sure that they are independent from each other. For example it is no use maximizing simultaneously the amount of a reaction’s product and minimizing the amount of non-converted reactants at the end of a batch process, because a high product concentration is correlated to low resting concentrations of reactants. A reasonable combination is for example maximization of an experimental result while minimizing the sum of decision variables, possibly reducing the costs of a process.

Optimization procedure
Once the MOP is defined by the above mentioned steps a random generated initial population is available. This set of design variables can be exported from GAME.opt and the according experiments are performed. After the experimental results are entered in GAME.opt the next population is generated and checked for individuals that have already appeared in order to prevent repeated experiments. This iterative process is performed until satisfying results are obtained. The external population contains the efficient set recovered so far and thus constitutes the result of the optimization process. The experimental results in the external population are already assigned because their members originate from former populations.


Results
10
4
11
4
\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{mathrsfs}
\usepackage{upgreek}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$ \begin{aligned}{} {\text{Minimize }}f_{1} = & (1 + g({\mathbf{x}})) \cdot \cos (x_{5} \pi /2) \cdot \cos (x_{6} \pi /2) \\ {\text{Minimize }}f_{2} = & (1 + g({\mathbf{x}})) \cdot \cos (x_{5} \pi /2) \cdot \sin (x_{6} \pi /2) \\ {\text{Minimize }}f_{3} = & (1 + g({\mathbf{x}})) \cdot \sin (x_{5} \pi /2) \\ {\text{where }}g({\mathbf{x}}) = & {\sum\limits_{i = 1}^4 {(x_{i} - 0.5)^{2} } } \\ {\text{subject to: 0}} \le & x_{i} \le 1\quad {\text{for }}i = 1,2, \ldots ,6 \\ \end{aligned} $$\end{document}

4
2
n
5
\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{mathrsfs}
\usepackage{upgreek}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$ {\text{incr}} = {\left( {\frac{{x^{{\text{U}}} - x^{{\text{L}}} }} {{2^{n} - 1}}} \right)} $$\end{document}


1
Table 1
4
 for different increments (incr)

Binary code

Decoded value (incr = 0.1)

Decoded value (incr = 1/15)


0 0 0 0
0
0

0 0 0 1
0.1
1/15

0 0 1 0
0.1
2/15

0 0 1 1
0.2
3/15

0 1 0 0
0.3
4/15

0 1 0 1
0.3
5/15

0 1 1 0
0.4
6/15

0 1 1 1
0.5
7/15

1 0 0 0
0.5
8/15

1 0 0 1
0.6
9/15

1 0 1 0
0.7
10/15

1 0 1 1
0.7
11/15

1 1 0 0
0.8
12/15

1 1 0 1
0.9
13/15

1 1 1 0
0.9
14/15

1 1 1 1
1
1





1
3
2
Table 2
Default parameter setting for the genetic algorithm

Parameter
Value


Crossover points
2

Mutation rate
1%

N
)
3


N
extern
)
N
/2

N
cluster
)
N
/2





2
f
1
f
2
f
3
Fig. 2
black dots
a
b
)




2
4
.
g
x
2
2
x
i

i 
x
5
x
6
3
Fig. 3
a
b
c
d
boxes
line in the box
bold dashed line
x
1
x
2
x
3
x
4
x
5
x
6
)




3
3
3
x
5
x
6
 is still high in both populations. The remaining variables show the expected divergence towards 0.5 in the external population but remain in parts distributed over a wider range in the normal population. From this result it gets obvious that GAME.opt performs well with a small amount of individuals and a short evolution on a MOP considered a benchmark of evolutionary computing.

Conclusions
6
 possible design variable combinations with the test problem presented).
12
].


Acknowledgment
The many helpful discussions with Ezequiel Franco-Lara, Technical University of Braunschweig, Germany are gratefully acknowledged.

References
1.
Weuster-Botz
D


Experimental design for fermentation media development: statistical design or global random search?
J Biosci Bioeng
2000
90
473
483

16232896


2.
Rechenberg
I


Optimierung technischer Systeme nach Prinzipien der biologischen Evolution
1973
Stuttgart
Friedrich Frommann Verlag

Rechenberg I (1973) Optimierung technischer Systeme nach Prinzipien der biologischen Evolution. Friedrich Frommann Verlag, Stuttgart 

3.
Holland
HJ


Adaption in natural and artificial systems, an introductory analysis with application to biology, control and artificial intelligence
1975
Ann Arbor
The University of Michigan Press

Holland HJ (1975) Adaption in natural and artificial systems, an introductory analysis with application to biology, control and artificial intelligence. The University of Michigan Press, Ann Arbor 

4.
Schaffer JD (1985) Multi-objective optimization with vector evaluated genetic algorithms. In: Proceedings of an international conference on genetic algorithms and their applications, pp 93–100

5.
Deb K, Agrawal S, Pratap A, Meyarivan T (2000) A fast elitist non-dominated sorting genetic algorithm for multi-objective optimization: NSGA-II. In: Proceedings of the Parallel Problem Solving from Nature, vol VI, pp 849–858

6.
Zitzler
E

Thiele
L


Multiobjective evolutionary algorithms: a comparative case study and the strength Pareto approach
IEEE Trans Evol Comput
1999
3
257
271
10.1109/4235.797969

Zitzler E, Thiele L (1999) Multiobjective evolutionary algorithms: a comparative case study and the strength Pareto approach. IEEE Trans Evol Comput 3:257–271 

7.
Chakraborty
M

Chakraborty
UK


An analysis of linear ranking and binary tournament selection in genetic algorithms
Proc Int Conf Inf Commun Signal Process
1997
1
407
411

Chakraborty M, Chakraborty UK (1997) An analysis of linear ranking and binary tournament selection in genetic algorithms. Proc Int Conf Inf Commun Signal Process 1:407–411 

8.
Kim JW, Kim SW, Park P, Park TJ (2002) On the similarities between binary-coded GA and real-coded GA in wide search space. In: Proceedings of the 2002 Congress on evolutionary computation, vol 1, pp 681–686

9.
Reeves CR (1993) Using genetic algorithms with small populations. In: Forrest S (ed) Proceedings of the 5th international conference on genetic algorithms. Morgan Kaufmann Publisher, San Mateo, pp 92–99

10.
Havel
J

Link
H

Hofinger
M

Franco-Lara
E

Weuster-Botz
D


Comparison of genetic algorithms for experimental multi-objective optimization on the example of medium design for cyanobacteria
Biotechnol J
2006
1
549
555
10.1002/biot.200500052

16892290


11.
Deb K, Thiele L, Laumanns M, Zitzler E (2002) Scalable multi objective optimization test problems. In: Proceedings of the 2002 Congress on evolutionary computation, vol 1, pp 825–830

12.
Weuster-Botz
D

Puskeiler
R

Kusterer
A

Kaufmann
K

John
GT

Arnold
M


Methods and milliliter scale devices for high-throughput bioprocess design
Bioprocess Biosyst Eng
2005
28
109
119
10.1007/s00449-005-0011-6

16049713





