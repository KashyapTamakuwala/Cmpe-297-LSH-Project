Molecular Systems Biology 3; Article number 145; doi:10.1038/msb4100187 Citation: Molecular Systems Biology 3:145 & 2007 EMBO and Nature Publishing Group All rights reserved 1744-4292/07 www.molecularsystemsbiology.com

Programming gene expression with combinatorial promoters
Robert Sidney Cox III1, Michael G Surette2 and Michael B Elowitz1,3*
1 Division of Biology, California Institute of Technology, Pasadena, CA, USA, 2 Department of Microbiology and Infectious Diseases, University of Calgary, Calgary, Alberta, Canada and 3 Department of Applied Physics, California Institute of Technology, Pasadena, CA, USA * Corresponding author. Division of Biology and Department of Applied Physics, California Institute of Technology, M/C 114­96 Pasadena, CA 91125, USA. Tel.: þ 1 626 395 8871; Fax: þ 1 626 395 5972; E-mail: melowitz@caltech.edu

Received 19.6.07; accepted 21.9.07

Promoters control the expression of genes in response to one or more transcription factors (TFs). The architecture of a promoter is the arrangement and type of binding sites within it. To understand natural genetic circuits and to design promoters for synthetic biology, it is essential to understand the relationship between promoter function and architecture. We constructed a combinatorial library of random promoter architectures. We characterized 288 promoters in Escherichia coli, each containing up to three inputs from four different TFs. The library design allowed for multiple À10 and À35 boxes, and we observed varied promoter strength over five decades. To further analyze the functional repertoire, we defined a representation of promoter function in terms of regulatory range, logic type, and symmetry. Using these results, we identified heuristic rules for programming gene expression with combinatorial promoters. Molecular Systems Biology 13 November 2007; doi:10.1038/msb4100187 Subject Categories: metabolic and regulatory networks; synthetic biology Keywords: combinatorial promoter; logic gate; signal integration; synthetic biology; transcription regulation This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits distribution, and reproduction in any medium, provided the original author and source are credited. This license does not permit commercial exploitation or the creation of derivative works without specific permission.

Introduction
In many promoters gene expression is regulated in response to two or more transcription factors (TFs). A classic example is the lac operon, where promoter activity depends on both the repressor LacI (Jacob and Monod, 1961) and the activator CRP (Zubay et al, 1970). Such combinatorial regulation of gene expression underlies diverse cellular programs (Ptashne, 2005), including responses to environmental conditions (Ligr et al, 2006) and multicellular development. Combinatorial promoters with multiple TF binding sites, or operators, can facilitate the integration of multiple signals. For example, a synthetic combinatorial promoter responding to LuxR and l cI was recently used to construct a genetic pulse generator (Basu et al, 2004), a band-pass filter, and a bulls-eye pattern formation system (Basu et al, 2005). Furthermore, circuits containing combinatorial promoters are predicted to generate robust oscillations (Hasty et al, 2002; Atkinson et al, 2003) or to create sign-sensitive filters, signal averaging, and response acceleration or delay (Mangan and Alon, 2003). Bacterial promoters typically occupy a region of 100 bp or less, surrounding the start site ( þ 1) of transcription, approximately from positions À75 to þ 25. This sequence includes the & 2007 EMBO and Nature Publishing Group

primary binding sites for the polymerase, the À10 and À35 boxes (Hawley and McClure, 1983), additional upstream (Chan and Busby, 1989; Ross et al, 1993) and downstream (Kammerer et al, 1986; Haugen et al, 2006) regulatory sequences, along with operators for activator and/or repressor TFs (Busby and Ebright, 1994; Browning and Busby, 2004). Operators within this region enable bound TFs to directly contact and recruit the polymerase (activation) or to sterically block polymerase contact with the À10 and À35 boxes (repression). The type and arrangement of these regulatory sequences and operators within the promoter region specify the promoter architecture. Genome sequencing and annotation reveal the identity and placement of the TF operators in natural promoters (Collado-Vides et al, 1991; Gralla and Collado-Vides, 1996; Salgado et al, 2006). In these and related works, the distributions of TF operators in Escherichia coli have highlighted trends in the operator positions relative to the polymerase box sequences. For example, it was found that activator operators occur principally around À40, whereas repressor operators were clustered from À60 to þ 20. These studies proposed that activation is effective only on promoters with low unregulated activity, such as in promoters containing a weak À35 box. The `effective repression' of a promoter, defined as the ratio of
Molecular Systems Biology 2007 1

Programming gene expression RS Cox III et al

expression in `on' and `off' states, was expected to be highest for promoters of strong unregulated activity. These results indicated that repression and activation are most effective at different promoter locations and on different intrinsic promoter strengths. The potential diversity of promoter architecture and functionality is large when one considers the many known mechanisms by which proteins and DNA interact. Here, we focus on the simplest promoter architectures regulated by multiple TFs and ask what types of regulation functions are possible. Classical descriptions of gene networks have used Boolean logic to describe combinatorial regulation (Kauffman, 1969; Thomas and D'Ari, 1990). However, because the output of a promoter is not a binary function of the concentrations of its regulators (Setty et al, 2003; Atsumi and Little, 2006; Guido et al, 2006; Mayo et al, 2006), a range of non-Boolean logical phenotypes are possible. Recent theoretical descriptions of transcriptional logic (Buchler et al, 2003; Bintu et al, 2005b; Hermsen et al, 2006) have focused on the effects of explicit TF­TF contacts and operator overlap, but it is not known whether such interactions are necessary to generate diverse phenotypes. To better understand natural promoter function and to improve the design of new promoters for synthetic biology applications (Hasty et al, 2002; Endy, 2005; Sprinzak and Elowitz, 2005), we report a synthetic library-based approach for construction and analysis of modular combinatorial promoters. Here, we varied the placement, affinity, and sequence of known operators (Supplementary Table S1), allowing us to determine the range of functions encoded by the simplest combinatorial promoters. This approach reveals fundamental features of the relationship between promoter architecture and function.

active only in the presence of the corresponding inducers L( þ )-arabinose (Lara) and oxo-C6-homoserine lactone (VAI), respectively. The repressors TetR and LacI are inactivated by the inducers anhydrotetracycline (aTc) and isopropyl b-D-1thiogalactopyranoside (IPTG), respectively. Consequently, induction of each factor (AraC, LuxR, LacI, or TetR) is expected to increase a target promoter's activity. These four TFs bind specifically to well-defined operators, are dispensable, and can be induced by small molecules without disrupting normal cellular processes. For each position (distal, core, and proximal), we designed 5 unregulated and 11 operator-containing units. These sequences varied the affinity, location, and orientation of operators (Figure 1D). The design also allowed for variable À10 and À35 boxes to encourage diverse expression levels. The 16 units of each type were assembled by randomized assembly ligation (Materials and methods) to generate a plasmid library containing approximately 22 000 independent assemblies and providing fivefold coverage of the 163¼4096 possible promoters. We transformed the plasmid library into E. coli strain MGZ1X expressing LacI, TetR, AraC, and LuxR. We then sequenced a set of 288 randomly chosen transformants and found 280 correctly assembled promoters (Supplementary Information 1). We determined 217 of these promoters to be unique. Within this set, 47 out of the 48 possible units were represented at least once. Thus, the randomized assembly ligation method produced a diverse set of correctly assembled promoters.

Library functions
We measured the expression of the 288 sequenced transformants in each of 16 combinations of the four chemical inducers (Figure 1C, Materials and methods, Supplementary Information 2). The library showed five decades of variation in promoter activity (Supplementary Figure S1). Promoters of high unregulated activity contained strong À10 and À35 boxes, although the presence of consensus box sequences did not predict unregulated promoter activity (Supplementary Figure S2). Of the 217 unique promoters, 83% produced measurable expression in at least one of the 16 conditions, and 49% changed expression by a factor of 10 or more. Of these 106 clones, 79 were found to respond to a single inducer and 27 responded by more than twofold to two inducers. No promoters were found to respond more than twofold to three or four inducers, or to decrease expression to less than half in the presence of an inducer (anti-induction). All of the dual-input promoters measured increased their activity monotonically in response to the inducer concentrations, both singly and in combination. Overall, the promoter library exhibited a diverse set of behaviors across the 16 conditions. How does promoter architecture constrain function? For each promoter, we compared the architecture (Supplementary Information 1) with the measured response (Supplementary Information 2). We found no significant regulation without the presence of a corresponding operator (Supplementary Information). The relationship between sequence and phenotype revealed several rules relating promoter architecture to promoter function, which we describe below. & 2007 EMBO and Nature Publishing Group

Results
Combinatorial library design and assembly
We developed an efficient method for assembling promoters from modular components. The method uses three classes of synthetic duplex DNA units with compatible 50 cohesive ends. These units correspond to the 45 bp region upstream of the À35 box (distal), the 25-bp region between the À35 and À10 boxes (core), and the 30-bp region downstream of the À10 box (proximal). In this scheme, an arbitrary promoter can be assembled from any combination of proximal, core, and distal units. The internal 50 overhangs determine each unit's placement in the promoter (Figure 1A). We assayed promoter activity using a bacterial luciferase reporter cassette on a low copy plasmid (Figure 1B and C). Here, we report all promoter activities in terms of arbitrary luminescence units (ALU). We incorporated operators for two activators and two repressors: The activator AraC (Ogden et al, 1980; Schleif, 2003) regulates arabinose metabolism in E. coli, whereas LuxR activates luminescence genes in Vibrio fischeri (Fuqua et al, 1994). The repressor LacI (Jacob and Monod, 1961; Setty et al, 2003) controls the metabolism of lactose in E. coli, whereas TetR represses the tetracycline resistance genes in transposon Tn10 (Beck et al, 1982; Skerra, 1994). The two activators are
2 Molecular Systems Biology 2007

Programming gene expression RS Cox III et al

distal

­35

core

­10

+1

proximal

tcgagtacaacgtcgtgttagctgccttttagcaattttatccatagacttgtgagcgctcacaatt tataattcgtgcaatTtttaaacctgtaggatcgtacaggt g catgttgcagcacaatcgacggaaaatcgttaaaataggtatctgaacactcgcgagtgttaa atattaagcacgttaAaaatttggacatcctagcatgtcca cctag

AraC I1 operator

LacI Os operator
distal core

LuxR operator
proximal AraC

LacI

KAN SC101

luxCDABE

LuxR

TetR
Lara aTc

­ ­

­ ­

10 7 10 5 10 3 (ALU)

Figure 1 Random assembly ligation generates a diverse promoter library. Promoters can be assembled out of modular sequence units. (A) The assembled sequence of an example promoter. The 50 overhangs of each unit are shown in red. The RNA polymerase boxes (À10 and À35) are highlighted in yellow, and the predicted start site of transcription ( þ 1) is capitalized. Operator colors are consistent throughout the figure. (B) Steps in promoter assembly and ligation into the luciferase reporter vector: promoters are assembled by mixed ligations using 1-bp or 2-bp cohesive ends, and then ligated into a luciferase reporter plasmid. (C) Luminescence measurements in 16 inducer conditions (±each of four inducers, as indicated) for the promoter shown in (A). The output levels determine promoter logic. Note that this promoter does not respond to LuxR regulation at the distal region. (D) The 48 unique units used in the library contain operators responsive to the four TFs (indicated by color) in the regions distal, core, and proximal (Sequences in Supplementary Table S1). The promoter fragments corresponding to (A) are boxed in red.

+ +
10 6 10 5 10 4 10 3 10 2 10 1 10
2

+ + ­ ­ ­ + + ­ + IPTG + VAI
distal
10 6 10 5 10 4 10 3 10 2 10 1

10 1

core/proximal

Induced activity (ALU)

Induced activity (ALU)

the repressed SIGs exhibited higher regulatory ranges up to r¼105 (Table I).

Activated SIGs
AraC proximal AraC core LuxR core LuxR proximal

Activation ceiling AraC distal LuxR distal 10
4

10

6

Uninduced activity (ALU)

10 2 10 4 10 6 Uninduced activity (ALU)

Figure 2 Activation functions at distal and is attenuated by intrinsic promoter strength. (A) Measurements of promoters activated at distal operators. These promoters respond only to LuxR (solid triangles) or AraC (open triangles) induction. Some promoters fail to respond even though they contain a functional operator (points on the solid line). The activation ceiling (red dashed line) represents the maximal observed activation and does not depend on the unregulated expression level. (B) Promoters containing operators at core (squares) or proximal (circles) do not respond to induction.

Single-input gates
The simplest promoters termed single-input gates (SIGs) responded to a single inducer (Figures 2 and 3). For these switch-like gates, we defined the regulatory range, r, as the ratio of the induced to uninduced activity. Within this group, activated SIGs showed regulatory ranges up to r¼103, whereas & 2007 EMBO and Nature Publishing Group

Activated expression level was independent of unregulated activity (Figure 2A). The best-activated SIGs (highest r) occurred at promoters with low expression in the unregulated state. Activation was ineffective for promoters with unregulated activity above approximately 105 ALU, which is 40-fold lower than the strongest promoter activity measured. This `activation ceiling' was the same for both AraC- and LuxRactivated promoters. These results show that activation is limited by the absolute expression level and is most effective on promoters of low intrinsic activity, consistent with previous suggestions (Busby and Ebright, 1994; Gross et al, 1998). Activation functioned only at the distal position (Figure 2), in accordance with previous studies of AraC and LuxR (Collado-Vides et al, 1991; Egland and Greenberg, 1999). We found neither inducible activation nor inducible repression by LuxR or AraC at core or proximal (Figure 2B). In such promoters, the typical induction response was only 6% for LuxR and 11% for AraC regulation. Some of the strongest activated SIGs (Table I) had additional activator operators at core or proximal sites, along with a functional operator at distal. We found that activator binding to core and proximal
Molecular Systems Biology 2007 3

Programming gene expression RS Cox III et al

distal
Repressed activity (ALU) Repressed activity (ALU)
LacI TetR background

core
LacI TetR background

proximal
Repressed activity (ALU)
LacI TetR background

10 4

10 4

10 4

10 2

10 2

10 2

10

2

10

4

10

6

10

2

10

4

10

6

10

2

10

4

10

6

Unrepressed activity (ALU)

Unrepressed activity (ALU)

Unrepressed activity (ALU)

Figure 3 Repression is effective at all three positions, following the trend coreXproximalXdistal. Measurements of repressed single-input promoters. Responses are colored according to the repressor: LacI (filled) or TetR (open). Each promoter contains a single operator located at distal (A), core (B), or proximal (C) positions. Single-input activities are plotted in the induced (unregulated) versus uninduced (repressed) states. In some promoters, operators do not effectively repress the promoter (points located near solid black line). Luciferase detection limits are shown with gray dashed lines.

Table I SIG promoters

TF Uninduced (ALU) TetR 26±8 14±4 14±3 23±7 15±5 12±0 18±3 86±25 273±92 58±17 130±50 420±310 310±60 250±30

Expression Induced (ALU) 2.3±0.2 Â106 1.7±0.1 Â105 4.7±0.2 Â105 9.9±0.8 Â104 6.9±1.1 Â104 3.0±0.2 Â105 2.7±0.3 Â104 3.1±0.2 Â105 7.2±0.2 Â104 3.6±0.3 Â104 1.4±0.1 Â105 9.7±2.3 Â104 7.3±0.9 Â104 2.8±0.6 Â104 Regulatory range (r) 8.9±0.3 Â104 1.2±0.4 Â104 3.3±0.7 Â104 4.4±1.4 Â103 4.7±1.6 Â103 2.5±0.2 Â104 1.5±0.2 Â104 3.6±1.1 Â103 2.6±0.9 Â102 6.2±1.9 Â102 1.1±0.5 Â103 230±180 230±50 110±30 ID D18 B10 B19 A9 B22 B4 A81 A38 A87 A52 D49 D80 A79 A1 distal con0 con0 ara3 con0 con4 lac1 lac2 lac1 con0 lac1 lux1 lux3 ara2 ara2 À35 TTGACA TTGACA TTGACA TTGACA TTGACA TTGACA TTGACT TTGACA TTGACA TTGACA TTTACT TTTACA TAGACA TAGACT

Genotypea core tet1 tet1 tet2 tet2 con4 lac2 con1 con0 ara1 ara1 con2 lux2 ara1 con2 À10 GATACT GATACT GATACT TAGAGT TAGATT GATACT GATACT TATAAT GATACT GATACT GATAAT TATAAT GATACT GATAAT proximal con1 con3 tet1 ara2 tet1 con0 lux1 lac4 lac4 con1 lux2 con3 lux2 con1

LacI

LuxR AraC

a

The genotype refers to the three units that make up each promoter and the À10 and À35 polymerase boxes. Here, con, tet, lac, ara, and lux refer to no operator, and TetR, LacI, AraC, and LuxR operators. In each case, the number refers to the operator variant. Full sequences for each unit are available in Supplementary Table S1. Functional operators are highlighted in bold.

did not, on average, strongly affect the maximal promoter activity (Supplementary information, Supplementary Figure S3). These results show that AraC and LuxR have neither positive nor strong negative regulatory effects on gene expression at the core and proximal regions.

Repressed SIGs
In contrast to activation, repression occurred effectively at all three positions (Figure 3). However, we found a clear trend between operator location and repression. Repression was most effective at core (Figure 3B), followed by proximal (Figure 3C), and then distal (Figure 3A). Within this trend, we found that the promoters of low unregulated activity were less sensitive to operator position. This result shows that repression is effective at all three positions, with relative strength following the rule coreXproximalXdistal. As with activation, the expression level in the repressed state was not determined by the unregulated level. Examples
4 Molecular Systems Biology 2007

of completely repressed expression were observed at every level of unregulated promoter activity (Figure 3). In fact, some repressed SIGs exhibited the highest activities observed (4106 ALU) upon induction (Table I). Within the limits of detection, the effective repression (r) tended to increase with unregulated expression level. Strikingly, the SIG showing the strongest regulation (r¼8.9 Â104, Table I, D18) had only a single TetR operator at the core region. Furthermore, a single repression site at any of the three positions was often enough to repress the promoter below the detection limit (Figure 3). In general, multiple operators were not more effective at repression than single operators. We found nine LacI-regulated and six TetR-regulated SIGs containing multiple repressor operators. Of these, only one LacI-regulated (Table I, A38) and one TetR-regulated (Table I, B19) promoter produced higher regulation than corresponding promoters containing a single operator. These results show that operator position is more important than operator multiplicity for achieving strong regulation with repressors. & 2007 EMBO and Nature Publishing Group

Programming gene expression RS Cox III et al

Dual-input logic
We next considered dual-input gates as logic functions of their two input inducers. Because of the continuous nature of the output levels in each input state, Boolean logic does not accurately represent the space of possible functions. For example, in a recent study, the natural lac promoter increased activity by a factor of 3.6 when induced by cAMP alone, by a factor of 7.1 when induced by IPTG alone, and by a factor of 14 when induced by both simultaneously (Setty et al, 2003). This intermediate behavior could be described as either AND-like or OR-like, depending on the activity threshold chosen. To describe such `intermediate logic' phenotypes, we introduced a three-dimensional parameterization for the space of promoter functions. In this scheme, we represented the promoter functions with three numerical parameters that quantify dynamic range, logic type, and asymmetry of inputs (Materials and methods). As before, r is the ratio of the maximum to minimum promoter activity. The parameter l quantifies the logical behavior of the promoter: from pure OR (l¼0) to pure AND logic (l¼1). Finally, the parameter a quantifies the asymmetry of the gate with respect to its two inducers. At a¼0, the gate responds identically to either inducer, whereas at a¼1, the promoter responds to one input only (pure SIG). These parameters span the full range of observed phenotypes and have intuitive interpretations. They also represent relative promoter activities rather than absolute levels, making them less sensitive to the choice of reporter, growth media, or other experimental conditions. Therefore, they form an ideal quantitative representation for the phenotypic behavior of these promoters. Within this logic-symmetry space, the positive monotonic response of promoters to their inputs restricts promoter logic to the triangular region shown in Figure 4. The corners of this region include three Boolean logic functions: the switch-like SIG (l¼0.5, a¼1), along with the canonical binary gates AND (l¼1, a¼0) and OR (l¼0, a¼0). The symmetric SLOPE gate (l¼0.5, a¼0) exhibits logic intermediate between AND and OR. The asymmetric asym-AND (l¼0.75, a¼0.50), asym-OR (l¼0.25, a¼0.50), and asym-SLOPE (l¼0.50, a¼0.50) gates
Inputs
­ ­ + + ­ + ­ +

describe idealized logic functions intermediate between SIG and AND, SIG and OR, and SIG and SLOPE, respectively (Figure 4A). This representation provides qualitative categories for the different types of logic displayed by monotonic dual-input promoters. We identified 50 dual-input gates (Materials and methods). Each defined a point (r, a, l) in the logical phenotype space (Figure 4B), revealing a range of functional behaviors. AsymAND and SIG-like gates exhibited strong regulation up to r¼105. The AND and asym-SLOPE gates were regulated up to r¼104, whereas the SLOPE gates were regulated up to r¼103. Notably, we found no gates exhibiting strong OR or asym-OR logic functions. However, one class of dual-input promoters (discussed below) exhibited asym-SLOPE logic approaching an asym-OR response (lo0.50). Thus, we observed a wide distribution of promoter logic types. The library contained two classes of dual-input gates. The repressor­repressor (RR) promoters contained operators for the repressors LacI and TetR, whereas the activator­repressor (AR) promoters responded to the activator AraC and one of the repressors. Due to the relative scarcity of LuxR-activated promoters, we did not find LuxR-regulated AR promoters in the characterized promoter set (Figure 2A). These two classes of dual-input gates exhibited differing but overlapping distributions of logical phenotypes. Comparison of AR and RR promoter phenotypes (Figure 4B) revealed that each has a preference for different logical categories, although both produced strong asym-AND gates. The RR promoters produced the strongest symmetric (AND and SLOPE) gates, whereas the AR promoters generated the strongest asym-SLOPE gates. This shows that RR promoters produced both symmetric and asymmetric logic, while AR promoters produced only asymmetric logic.

Mathematical model of repressor interaction
To better understand the variety of symmetric and asymmetric logic observed for the RR promoter class, we employed a

AR-promoters RR-promoters Activity SIG Asymmetry (a) 1

Regulation (r) 10
5

1 0.75 Asym-OR 0.5 Asym-SLOPE 0.25 0 OR SLOPE

Asymmetry (a)

Asym-AND

0.75 0.5 0.25 0 0

10 10 10

4

3

2

AND

10 1

0

0.25

0.5 0.75 Logic (l ) More OR more AND

1

0.25

0.5 0.75 Logic (l ) More OR more AND

1

Figure 4 Dual-input gates exhibit diverse functions in logic-symmetry space. Promoter response phenotypes can be represented by their asymmetry, a (y-axis), logic type, l (x-axis), and regulatory range, r. (A) Diagram showing the space of allowed logical phenotypes, with the locations of ideal logic gates indicated. The SIG responds completely to one inducer and not at all to the other. The SLOPE gate represents an intermediate logical function between AND and OR, whereas the asymmetric gates are intermediate between SIG and the corresponding symmetric gate. Intermediate logical behavior is represented between these ideal locations. The logic-symmetry parameterization is defined in the Materials and methods. Points outside of the dashed triangle are not accessible if promoters respond monotonically to each input. (B) The logical phenotypes of 50 dual-input promoters (r 4 3). AR promoters are shown as purple circles, RR promoters are shown as gold disks. The diameter of each disk is proportional to the logarithm of its regulatory range, r.

& 2007 EMBO and Nature Publishing Group

Molecular Systems Biology 2007 5

Programming gene expression RS Cox III et al

simple model of promoter activity in the presence of two repressors (Materials and methods). In this model, c1, c2, and o represent the strength of repression at the stronger operator, the weaker operator, and the repressor­repressor interaction, respectively (Bintu et al, 2005b). When the repressors do not interact with each other, o¼1, whereas for exclusive interactions (only one repressor can bind at a time), o¼0. Cooperative interactions would correspond to o41. The logic parameter l was tightly coupled to the model interaction parameter o (Materials and methods). A plot of a and l as parameterized functions of the microscopic model parameters (Supplementary Figure S4) showed that RR promoters with o ranging from 0 (exclusive interaction) to 1 (independent interaction) can produce any logic function in the right half (lX0.5) of the phenotype space triangle: SIG, AND, SLOPE, asym-AND, and asym-SLOPE. In particular, exclusive interaction (o¼0) approached pure AND logic (l¼1), whereas independent interaction (o¼1) always resulted in SLOPE-like logic (l¼0.5). Conversely, we found that an asymOR gate would require extremely high cooperative interaction (o¼100), whereas an ideal OR gate would require infinite cooperativity. Therefore, the range of logic functions displayed by the library RR promoters (Figure 4B) falls within the spectrum of noncooperative interactions (1XoX0). This model demonstrates that a variety of logic functions can be achieved without explicit protein­protein cooperativity.

RR promoters
Dual repression can be either symmetric or asymmetric (Figure 4B), with either repressor dominant (Figure 5A). As with the SIGs, even the strongest RR promoters could be fully repressed, exhibiting effective repression up to r¼105. RR promoter logic was always AND-like or SLOPE-like (0.5pl p1.0), indicating that there were no instances of strong cooperative interaction between the repressors (op1). In three cases, mutation of a repressor operator resulted in almost completely asymmetric (a¼1) SIG logic (Figure 4B, top of
LacI Architecture LacI/TetR genotype
distal
­35 TTGACA
TTGACA TTGACA TTGACA TTGACA TTGACA TTGACA TTGACA TTGACT TTGACA

triangle). In other cases, the repression was more balanced (ao0.25), producing symmetric AND and SLOPE responses. Thus, RR promoters displayed a large range of dual-input regulatory logic including AND, SLOPE, asym-SLOPE, and asym-AND gates. In principle, the logic phenotype displayed by a promoter could depend on the inducer concentrations used. Therefore, we chose three RR promoters (Figure 5A, clones A3, D8, and D9), and measured their responses to 16 combinations of inducer concentrations (Supplementary Information). As expected, all three promoters increased their activity monotonically with increasing concentrations of each inducer. As shown in Supplementary Figure S5, inducer concentrations primarily affected r and a, whereas the logic parameter l was less dependent (Supplementary Information). The most ANDlike gate (A3) had the highest variation in logic (l¼0.46 to l¼0.86), whereas the most SLOPE-like (D9) exhibited the narrowest range (l¼0.48 to l¼0.53). These results imply that r and a depend strongly on input concentration; whereas for l, independent (SLOPE) logic is more robust than exclusive regulation (AND). The repressor operator location trend coreXproximalX distal explains the combinatorial promoter behaviors shown in Figure 5A. For RR promoters, the position of the operators determined whether LacI or TetR was dominant. We found only one clear exception to this trend (Figure 5A, clone A3), where TetR acting at proximal slightly dominates LacI acting at core. Symmetric repression occurred for several architectures, such as with a TetR at core and two LacI operators, one at distal and the other at proximal (Figure 5A, A28). In all other asymmetric cases core dominated proximal and distal, while proximal dominated distal. RR promoter architectures with operators at proximal and distal produced the largest range of logic behaviors including AND, SLOPE, asym-AND, and asymSLOPE. RR promoters with operators at the core and proximal positions produced only AND and asym-AND logic. Of the seven RR promoters exhibiting strong AND-like logic (l40.8), five had operators at core and proximal. Finally, RR promoter

TetR

AraC Architecture AraC / TetR genotype
TAGACA TAGACA TAGACA TAGAGT TAGATT TATAAT

Input /Output IPTG ­ + ­ + aTc ­ ­ + +
proximal

Input /Output Lara ­ + ­ + aTc ­ ­ + + Clone
D46 A78 D29

Clone
B83 C61 A3 A60 D8 A90 A28 C68 D56 D9

10 6 (Arbitrary luminescence units) 10 5 10 4

core

­10 TAGAGT
TAGAGT GATACT TAGAGT TATAAT GATACT GATACT GATACT GATACT TATAAT

AraC/LacI genotype
TAGACT TAGACA TAGACA TAGACT TAGACT TAGACT TATAAT TATAAT TAGAAT TATAAT GATACT GATAAT

Lara ­ + ­ + IPTG ­ ­ + +
A12 B31 A54 D91 D61 B81

10 3 10 2 10 1

Figure 5 Combinatorial promoter architecture reveals rules for programming gene expression. The architecture and function of several dual-input promoters. The architecture of each promoter (colored according to Figure 1) is shown with its functional operators and À10 and À35 boxes. (A) RR promoters respond to both LacI and TetR. The fourth induction column ( þ IPTG, þ aTc) corresponds to the unregulated state. (B) AR promoters respond to AraC and one of the two repressors, as indicated. Here, the third column ( þ IPTG/aTc, ÀLara) corresponds to the unregulated state.
6 Molecular Systems Biology 2007

& 2007 EMBO and Nature Publishing Group

Programming gene expression RS Cox III et al

architectures with operators at core and distal produced the most asymmetric logic functions (e.g. Figure 5A, B83); the repressor acting at core was always strongly dominant. These results show that repressor dominance in combinatorial promoters follows the trend coreXproximalXdistal, and that close operator proximity is consistent with AND-like logic.

5. Operator proximity. Independent regulators generate SLOPE-like logic. Operator proximity increases competitive interactions, making the logic more AND-like. For both activation and repression, the activity of the promoter in the regulated (activated/repressed) state is not determined by the activity in the unregulated state (Rule 1). Intuitively, activation has higher r when the unregulated activity is low, and repres